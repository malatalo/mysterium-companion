{"version":3,"sources":["MystTable.js","CoolButton.js","SetupDialog.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","overflowX","backgroundColor","maxWidth","minWidth","display","marginTop","tableHead","tableBody","table","size","tableCell","width","padding","MystTable","props","classes","colors","purple","yellow","blue","black","red","white","react_default","a","createElement","Paper","className","square","Table","TableHead","TableRow","TableCell","align","weaponsOrStories","TableBody","rows","map","row","key","color","style","opacity","murderer","showMurderer","component","scope","suspect","location","weapon","createMuiTheme","overrides","MuiButton","text","background","borderRadius","border","height","boxShadow","CoolButton","_ref","onClick","ThemeProvider","Button","formControl","margin","spacing","group","SetupDialog","cancel","openCloseSetupDialog","Dialog","PaperProps","open","scroll","onClose","aria-describedby","DialogContent","c","FormControlLabel","control","Checkbox","checked","selected","onChange","handleDialogColorChange","value","label","expansions","exp","short","handleDialogExpansionChange","name","find","e","Fragment","RadioGroup","event","handleDialogWeaponsOrStoriesChange","target","disabled","Radio","DialogActions","setupGame","initState","suspects","locations","weapons","stories","setupDialogOpen","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initArray","start","end","prefix","Array","fill","_","idx","bool","setState","cols","state","filter","exps","resetGame","suspectNumbers","locationNumbers","weaponNumbers","storyNumbers","forEach","ex","concat","cards","length","randomizeRow","Math","floor","random","sort","b","isNaN","toggleShowMurderer","randomNumber","min","max","suspectNumber","locationNumber","splice","weaponOrStory","weaponNumber","storyNumber","push","base","hs","sl","_this2","gameStarted","src_CoolButton","Grid","container","direction","justify","alignItems","alignContent","item","xs","v","React","Component","Boolean","window","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c7fb62a.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    overflowX: \"auto\",\n    backgroundColor: \"rgba(255,255,255,0)\",\n    maxWidth: 1000,\n    minWidth: 0,\n    display: \"inline-block\",\n    marginTop: \"50px\"\n  },\n  tableHead: {\n    backgroundColor: \"rgba(255,255,255,0.5)\"\n  },\n  tableBody: {\n    backgroundColor: \"rgba(255,255,255,0.8)\"\n  },\n  table: {\n    minWidth: 0,\n    size: \"small\"\n  },\n  tableCell: {\n    minWidth: 0,\n    width: \"20%\",\n    padding: \"dense\"\n  }\n}));\n\nexport default function MystTable(props) {\n  const classes = useStyles();\n  const colors = {\n    purple: \"rgba(128, 0, 128, 0.5)\",\n    yellow: \"rgba(255, 255, 0, 0.5)\",\n    blue: \"rgba(0, 0, 255, 0.5)\",\n    black: \"rgba(0, 0, 0, 0.5)\",\n    red: \"rgba(255, 0, 0, 0.5)\",\n    white: \"rgba(255, 255, 255, 0.5)\"\n  };\n\n  return (\n    <Paper className={classes.root} square={true}>\n      <Table className={classes.table}>\n        <TableHead className={classes.tableHead}>\n          <TableRow>\n            <TableCell className={classes.tableCell}>Player</TableCell>\n            <TableCell className={classes.tableCell} align=\"right\">\n              Suspect\n            </TableCell>\n            <TableCell className={classes.tableCell} align=\"center\">\n              Location\n            </TableCell>\n            <TableCell className={classes.tableCell} align=\"left\">\n            {props.weaponsOrStories == \"weapons\" ? \"Weapon\" : \"Story\"}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody className={classes.tableBody}>\n          {props.rows.map(row => (\n            <TableRow\n              key={row.color}\n              style={{ backgroundColor: colors[row.color], opacity: !row.murderer && props.showMurderer ? 0.2 : 1 }}\n            >\n              <TableCell component=\"th\" scope=\"row\">\n                {row.color}\n              </TableCell>\n              <TableCell align=\"right\">{row.suspect}</TableCell>\n              <TableCell align=\"center\">{row.location}</TableCell>\n              <TableCell align=\"left\">{row.weapon}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiButton: {\n      text: {\n        background: 'linear-gradient(45deg, #001064 30%, #283593 90%)',\n        borderRadius: 3,\n        border: 0,\n        color: 'white',\n        height: 48,\n        padding: '0 20px',\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n      },\n    },\n  },\n});\n\nfunction CoolButton({onClick, text}) {\n  return (\n    <ThemeProvider theme={theme}>\n      <Button onClick={onClick}>{text}</Button>\n    </ThemeProvider>\n  );\n}\n\nexport default CoolButton;","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  formControl: {\n    margin: theme.spacing(3)\n  },\n  group: {\n    margin: theme.spacing(1, 0)\n  }\n}));\n\nexport default function SetupDialog(props) {\n  const classes = useStyles();\n  const start = () => {\n    props.openCloseSetupDialog(false);\n    props.setupGame();\n  };\n\n  const cancel = () => {\n    props.openCloseSetupDialog(false);\n  };\n\n  const handleRadioButtons = event => {\n    props.handleDialogWeaponsOrStoriesChange(event.target.value);\n  };\n\n  return (\n    <Dialog\n      PaperProps={{\n        style: {\n          backgroundColor: \"#90A4AE\",\n          maxWidth: \"300px\"\n        }\n      }}\n      open={props.open}\n      scroll={\"body\"}\n      onClose={cancel}\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogContent>\n        <h3>Select colors</h3>\n        <DialogContent>\n          {props.colors.map(c => (\n            <span key={c.color}>\n              <FormControlLabel\n                key={c.color}\n                control={\n                  <Checkbox\n                    checked={c.selected}\n                    onChange={props.handleDialogColorChange(c.color)}\n                    value={c.color}\n                    style={{ color: c.color }}\n                  />\n                }\n                label={c.color}\n              />\n              <br />\n            </span>\n          ))}\n        </DialogContent>\n        <h3>Select expansions</h3>\n        <DialogContent>\n          {props.expansions.map(exp => (\n            <span key={exp.short}>\n              <FormControlLabel\n                key={exp.short}\n                control={\n                  <Checkbox\n                    checked={exp.selected}\n                    onChange={props.handleDialogExpansionChange(exp.short)}\n                    value={exp.short}\n                    style={{ color: \"#B2EBF2\" }}\n                  />\n                }\n                label={exp.name}\n              />\n              <br />\n            </span>\n          ))}\n        </DialogContent>\n        {props.expansions.find(e => e.short === \"sl\").selected === true && <>\n        <h3>Weapons or stories?</h3>\n        <DialogContent>\n          <RadioGroup\n            className={classes.group}\n            value={props.weaponsOrStories}\n            onChange={handleRadioButtons}\n          >\n            <FormControlLabel\n              disabled={props.expansions.find(e => e.short === \"sl\").selected !== true}\n              value=\"weapons\"\n              control={<Radio style={{ color: \"#B2EBF2\" }} />}\n              label=\"Weapons\"\n            />\n            <FormControlLabel\n              disabled={props.expansions.find(e => e.short === \"sl\").selected !== true}\n              value=\"stories\"\n              control={<Radio style={{ color: \"#B2EBF2\" }} />}\n              label=\"Stories\"\n            />\n          </RadioGroup>\n        </DialogContent>\n        </>}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={cancel} color=\"primary\" style={{ color: \"white\" }}>\n          Cancel\n        </Button>\n        <Button onClick={start} color=\"primary\" style={{ color: \"white\" }}>\n          OK\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport MystTable from \"./MystTable\";\nimport Grid from \"@material-ui/core/Grid\";\nimport CoolButton from \"./CoolButton\";\nimport SetupDialog from \"./SetupDialog\";\n\nconst initState = {\n  rows: [],\n  suspects: [],\n  locations: [],\n  weapons: [],\n  stories: [],\n  showMurderer: false,\n  setupDialogOpen: false,\n  colors: [\n    { color: \"purple\", selected: true },\n    { color: \"yellow\", selected: true },\n    { color: \"blue\", selected: true },\n    { color: \"black\", selected: true },\n    { color: \"red\", selected: true },\n    { color: \"white\", selected: true }\n  ],\n  weaponsOrStories: \"weapons\",\n  expansions: [\n    { name: \"Base game\", short: \"base\", selected: true },\n    { name: \"Hidden Signs\", short: \"hs\", selected: false },\n    { name: \"Secrets & Lies\", short: \"sl\", selected: false }\n  ]\n};\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    this.cards = {\n      base: {\n        suspects: this.initArray(1, 18, \"\"),\n        locations: this.initArray(19, 37, \"\"),\n        weapons: this.initArray(38, 56, \"\")\n      },\n      hs: {\n        suspects: this.initArray(1, 6, \"HS\"),\n        locations: this.initArray(7, 12, \"HS\"),\n        weapons: this.initArray(13, 18, \"HS\")\n      },\n      sl: {\n        suspects: this.initArray(1, 6, \"SL\"),\n        locations: this.initArray(7, 12, \"SL\"),\n        weapons: this.initArray(13, 18, \"SL\"),\n        stories: this.initArray(19, 36, \"SL\")\n      }\n    };\n\n    this.suspectNumbers = [];\n    this.locationNumbers = [];\n    this.weaponNumbers = [];\n    this.storyNumbers = [];\n\n    this.suspects = [];\n    this.locations = [];\n    this.weapons = [];\n\n    this.state = initState;\n  }\n\n  initArray = (start, end, prefix) => {\n    return Array(end - start + 1)\n      .fill()\n      .map((_, idx) => prefix + (start + idx));\n  };\n\n  openCloseSetupDialog = bool => {\n    this.setState({ setupDialogOpen: bool });\n  };\n\n  handleDialogColorChange = color => event => {\n    let cols = this.state.colors;\n    cols.filter(c => c.color === color).map(c => (c.selected = !c.selected));\n    this.setState({ colors: cols });\n  };\n\n  handleDialogExpansionChange = exp => event => {\n    let exps = this.state.expansions;\n    exps.filter(e => e.short === exp).map(e => (e.selected = !e.selected));\n    this.setState({ expansions: exps });\n    if (exp === \"sl\") {\n      if (this.state.expansions.find(e => e.short === \"sl\").selected === false)\n        this.setState({ weaponsOrStories: \"weapons\" });\n    }\n  };\n\n  handleDialogWeaponsOrStoriesChange = value => {\n    this.setState({ weaponsOrStories: value });\n  };\n\n  resetGame = bool => {\n    this.suspectNumbers = [];\n    this.locationNumbers = [];\n    this.weaponNumbers = [];\n    this.storyNumbers = [];\n    this.suspects = [];\n    this.locations = [];\n    this.weapons = [];\n    this.stories = [];\n    if (bool) this.setState(initState);\n  };\n\n  setupGame = () => {\n    this.resetGame(false);\n    this.state.expansions\n      .filter(exp => exp.selected === true)\n      .forEach(exp => {\n        const ex = exp.short;\n        this.suspectNumbers = this.suspectNumbers.concat(this.cards[ex].suspects);\n        this.locationNumbers = this.locationNumbers.concat(this.cards[ex].locations);\n        this.weaponNumbers = this.weaponNumbers.concat(this.cards[ex].weapons);\n        if (ex === \"sl\") this.storyNumbers = this.storyNumbers.concat(this.cards[ex].stories);\n      });\n\n    if (\n      this.suspectNumbers.length === 0 ||\n      this.locationNumbers.length === 0 ||\n      (this.weaponNumbers.length === 0 && this.storyNumbers.length === 0)\n    ) {\n      this.resetGame(true);\n      return;\n    }\n\n    let rows = [];\n    this.state.colors.forEach(color => {\n      color.selected && this.randomizeRow(rows, color.color);\n    });\n    if (rows.length === 0) {\n      this.setState({\n        colors: this.state.colors.map(c => (c.selected = true))\n      });\n      this.resetGame(true);\n      return;\n    }\n    rows[Math.floor(Math.random() * rows.length)].murderer = true;\n    this.setState({ rows: rows, showMurderer: false });\n\n    this.suspects = this.suspects.sort((a, b) => {\n      if (isNaN(a) || isNaN(b)) {\n        return a > b ? 1 : -1;\n      }\n      return a - b;\n    });\n\n    this.locations = this.locations.sort((a, b) => {\n      if (isNaN(a) || isNaN(b)) {\n        return a > b ? 1 : -1;\n      }\n      return a - b;\n    });\n\n    this.weapons = this.weapons.sort((a, b) => {\n      if (isNaN(a) || isNaN(b)) {\n        return a > b ? 1 : -1;\n      }\n      return a - b;\n    });\n  };\n\n  toggleShowMurderer = () => {\n    this.setState({ showMurderer: !this.state.showMurderer });\n  };\n\n  randomNumber = (min, max) => {\n    return Math.floor(min + Math.random() * (max - min + 1));\n  };\n\n  randomizeRow = (rows, color) => {\n    const suspectNumber = this.randomNumber(0, this.suspectNumbers.length - 1);\n    const locationNumber = this.randomNumber(0, this.locationNumbers.length - 1);\n    const suspect = this.suspectNumbers.splice(suspectNumber, 1);\n    const location = this.locationNumbers.splice(locationNumber, 1);\n    \n    let weaponOrStory = null;\n    if (this.state.weaponsOrStories === \"weapons\") {\n      const weaponNumber = this.randomNumber(0, this.weaponNumbers.length - 1);\n      weaponOrStory = this.weaponNumbers.splice(weaponNumber, 1);\n    } else {\n      const storyNumber = this.randomNumber(0, this.storyNumbers.length - 1);\n      weaponOrStory = this.storyNumbers.splice(storyNumber, 1);\n    }\n\n    this.suspects.push(suspect);\n    this.locations.push(location);\n    this.weapons.push(weaponOrStory);\n\n    rows.push({\n      murderer: false,\n      color: color,\n      suspect: suspect,\n      location: location,\n      weapon: weaponOrStory\n    });\n  };\n\n  render() {\n    const gameStarted = this.state.rows.length > 0;\n\n    return (\n      <div className=\"App\">\n        <SetupDialog\n          open={this.state.setupDialogOpen}\n          openCloseSetupDialog={this.openCloseSetupDialog}\n          setupGame={this.setupGame}\n          colors={this.state.colors}\n          expansions={this.state.expansions}\n          handleDialogColorChange={this.handleDialogColorChange}\n          handleDialogExpansionChange={this.handleDialogExpansionChange}\n          handleDialogWeaponsOrStoriesChange={this.handleDialogWeaponsOrStoriesChange}\n          weaponsOrStories={this.state.weaponsOrStories}\n        />\n        <div className=\"container\">\n          <CoolButton\n            onClick={() => this.openCloseSetupDialog(true)}\n            text={gameStarted ? \"restart\" : \"start\"}\n          />\n          &nbsp;\n          {gameStarted && (\n            <CoolButton\n              onClick={this.toggleShowMurderer}\n              text={this.state.showMurderer ? \"Hide Murderer\" : \"Show Murderer\"}\n            />\n          )}\n          {gameStarted && (\n            <div style={{ width: \"100%\" }}>\n              <Grid\n                className={\"gridContainer\"}\n                container\n                spacing={3}\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n                alignContent=\"center\"\n                style={{ width: \"90%\", display: \"inline-flex\" }}\n              >\n                <Grid item xs={12} className={\"gridTitle\"}>\n                  Suspects\n                </Grid>\n                {this.suspects.map(v => (\n                  <Grid key={v} className={\"transparentWhite\"} item xs={2}>\n                    {v}\n                  </Grid>\n                ))}\n                <Grid item xs={12} className={\"gridTitle\"}>\n                  Locations\n                </Grid>\n                {this.locations.map(v => (\n                  <Grid key={v} className={\"transparentWhite\"} item xs={2}>\n                    {v}\n                  </Grid>\n                ))}\n                <Grid item xs={12} className={\"gridTitle\"}>\n                  {this.state.weaponsOrStories == \"weapons\" ? \"Weapons\" : \"Stories\"}\n                </Grid>\n                {this.weapons.map(v => (\n                  <Grid key={v} className={\"transparentWhite\"} item xs={2}>\n                    {v}\n                  </Grid>\n                ))}\n              </Grid>\n              <MystTable rows={this.state.rows} showMurderer={this.state.showMurderer} weaponsOrStories={this.state.weaponsOrStories} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}